package com.example.mike.solarbars;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class HistoricalData_test {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }

    @Test
    public void test_HistoricalData()
    {
        String test_string = "{\"date\": \"2018_11_18\", \"sourceName\": \"Load\", \"sourceIndex\": 0, \"sourceData\": {\"mA_max\": [318, 318, 318, 318, 320, 320, 320, 320, 320, 320, 320, 320, 322, 320, 320, 320, 320, 322, 320, 320, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 320, 322, 322, 740, 326, 318, 316, 314, 316, 312, 314, 316, 316, 316, 318, 312, 302, 302, 302, 302, 302, 300, 300, 302, 302, 300, 302, 302, 302, 302, 314, 316, 670, 678, 590, 524, 512, 476, 442, 424, 410, 398, 392, 416, 396, 384, 376, 374, 328, 328, 318, 318, 318, 318, 318, 318, 318, 318, 318, 318, 318, 320, 318, 320, 318, 318, 318, 320, 318, 318, 320, 320, 320, 320, 320, 320, 318, 320, 320, 320, 320, 320, 318, 318, 318, 318], \"mA_avg\": [320, 320, 321, 322, 738, 614, 323, 323, 323, 323, 323, 323, 323, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 325, 324, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 324, 323, 353, 641, 884, 762, 348, 345, 343, 681, 480, 343, 343, 345, 344, 345, 345, 333, 331, 330, 338, 331, 331, 328, 336, 333, 328, 329, 329, 329, 335, 344, 585, 745, 734, 681, 621, 582, 513, 491, 466, 448, 435, 457, 532, 437, 423, 413, 418, 377, 365, 364, 347, 346, 347, 346, 346, 346, 348, 347, 347, 347, 347, 347, 347, 348, 348, 347, 347, 348, 347, 347, 347, 348, 349, 348, 348, 348, 348, 347, 348, 351, 348, 321, 321, 321, 320], \"mA_min\": [340, 336, 336, 336, 990, 748, 340, 334, 336, 340, 332, 336, 346, 334, 336, 338, 336, 346, 338, 334, 336, 342, 338, 336, 338, 348, 334, 336, 340, 332, 338, 336, 334, 336, 334, 336, 338, 340, 350, 336, 364, 354, 338, 336, 336, 338, 336, 338, 344, 334, 340, 336, 340, 336, 432, 1048, 1036, 886, 480, 464, 482, 1020, 838, 476, 464, 434, 452, 470, 462, 424, 400, 404, 454, 436, 440, 438, 458, 448, 438, 398, 388, 406, 474, 476, 1030, 852, 820, 774, 782, 798, 624, 768, 736, 700, 562, 1004, 862, 630, 586, 552, 672, 684, 500, 516, 432, 464, 488, 486, 472, 486, 456, 460, 486, 488, 484, 430, 452, 452, 462, 446, 454, 466, 468, 464, 468, 420, 488, 486, 424, 482, 450, 462, 420, 464, 464, 398, 332, 344, 342], \"v_max\": [12.708, 12.708, 12.700000000000001, 12.704, 12.6, 12.604000000000001, 12.688, 12.684000000000001, 12.684000000000001, 12.676, 12.676, 12.672, 12.664, 12.66, 12.656, 12.652000000000001, 12.652000000000001, 12.64, 12.636000000000001, 12.64, 12.636000000000001, 12.632, 12.628, 12.624, 12.620000000000001, 12.612, 12.608, 12.608, 12.604000000000001, 12.6, 12.596, 12.596, 12.592, 12.588000000000001, 12.584, 12.584, 12.576, 12.576, 12.568, 12.564, 12.556000000000001, 12.56, 12.572000000000001, 12.572000000000001, 12.568, 12.576, 12.58, 12.576, 12.572000000000001, 12.576, 12.572000000000001, 12.584, 12.608, 12.64, 12.6, 12.496, 12.456, 12.508000000000001, 12.76, 12.884, 13.008000000000001, 12.744, 12.748000000000001, 13.06, 13.052, 13.056000000000001, 13.052, 12.94, 12.936, 13.296000000000001, 13.256, 13.224, 13.104000000000001, 13.236, 13.168000000000001, 14.06, 13.332, 13.408, 13.536, 13.436, 14.096, 13.436, 13.280000000000001, 13.036, 12.848, 12.872, 12.9, 13.08, 13.044, 13.036, 13.088000000000001, 12.984, 12.924, 12.984, 12.964, 12.82, 12.816, 12.876, 12.852, 12.852, 12.82, 12.812, 12.836, 12.828, 12.828, 12.82, 12.82, 12.82, 12.816, 12.812, 12.808, 12.8, 12.796000000000001, 12.8, 12.792, 12.788, 12.784, 12.784, 12.780000000000001, 12.776, 12.772, 12.764000000000001, 12.768, 12.764000000000001, 12.76, 12.756, 12.752, 12.748000000000001, 12.744, 12.74, 12.736, 12.724, 12.728, 12.724, 12.716000000000001, 12.724, 12.732000000000001, 12.724, 12.72], \"mAsec\": [183556, 183902, 183956, 184542, 423228, 351306, 185282, 185322, 185368, 185076, 185484, 185520, 185572, 185660, 185388, 185732, 185800, 185562, 185844, 185804, 185912, 185610, 185972, 185988, 186030, 185852, 186110, 186192, 186250, 185878, 186272, 186252, 186260, 186030, 186336, 186366, 186428, 186180, 186628, 186502, 186418, 186516, 186436, 186462, 186488, 186144, 186302, 186390, 186322, 186436, 186424, 186014, 185878, 185524, 202270, 367796, 507024, 436148, 200300, 198836, 197194, 389882, 276492, 197498, 197760, 198528, 197974, 198624, 198680, 191782, 190454, 190122, 194614, 190268, 190548, 188902, 193424, 191724, 188880, 189612, 189676, 189368, 192994, 197634, 336576, 428176, 419482, 388428, 354110, 332886, 39572, 281634, 267828, 257060, 249460, 262444, 305212, 249558, 241572, 236272, 239724, 216290, 209682, 208682, 198160, 198994, 198882, 199124, 198672, 199134, 199504, 199268, 199368, 198694, 198672, 198794, 199012, 199502, 199946, 199374, 199222, 199798, 199044, 199360, 199288, 199930, 199996, 198496, 197850, 198908, 199054, 93260, 94016, 200470, 199218, 183456, 183052, 183742, 183518], \"v_avg\": [12.717398601398717, 12.713724258289863, 12.710506108202361, 12.706820244327998, 12.61162303664919, 12.6297272727273, 12.694701570680586, 12.690017452007034, 12.685668411867503, 12.681545454545578, 12.677263525305555, 12.673535776614115, 12.669731239092373, 12.665989528795732, 12.662300699300673, 12.657975567190178, 12.654478184991264, 12.650720279720344, 12.64729493891808, 12.643553228621341, 12.639518324607462, 12.635776223776345, 12.632020942408232, 12.628258289703224, 12.62460034904, 12.620419580419496, 12.616816753926681, 12.613382198952927, 12.610052356021052, 12.606748251748384, 12.603036649214753, 12.599678883071613, 12.595993019197017, 12.592517482517367, 12.589368237347237, 12.58560558464216, 12.582869109947556, 12.579825174825121, 12.576656195462492, 12.570017452007097, 12.567867132867281, 12.56914485165806, 12.57576963350786, 12.57581849912742, 12.573521815008757, 12.583552447552295, 12.591525305410052, 12.581731239092411, 12.599036649214607, 12.580830715532239, 12.582701570680504, 12.594671328671312, 12.643427574171055, 12.680307155322796, 12.625849912739938, 12.60053054101222, 12.481654450261718, 12.566461538461546, 12.891714782608714, 12.96088347826086, 13.042320557491319, 12.879349650349697, 13.115033043478277, 13.166580869565216, 13.097168695652204, 13.100431304347838, 13.07585391304353, 12.990267826086983, 12.989467826086965, 13.729266086956494, 13.894142608695564, 13.930066086956439, 13.477787826087, 13.918703832752534, 13.905488695652178, 14.091888695652115, 13.582483478260839, 13.745113043478236, 14.064897391304271, 14.005940869565215, 14.112883478260919, 14.078977391304397, 13.653593043478287, 13.13094773519159, 12.956215652173901, 12.894432055749126, 13.247313485113844, 13.627235087719308, 13.546708771929808, 13.169618213660216, 13.119116883116885, 13.025054101221563, 12.989407665505214, 13.028321116928412, 13.048139616055852, 12.917672473867652, 12.865989528795764, 12.896777583187344, 12.8826760070053, 12.882265734265818, 12.85992321116922, 12.859623036649083, 12.853403141361232, 12.846944055944038, 12.842059544658563, 12.83449477351922, 12.833682373473033, 12.83255052264814, 12.828998254799405, 12.825358885017462, 12.82144502617789, 12.81768237347288, 12.814466898954612, 12.810909090909048, 12.80755244755245, 12.803993006993057, 12.800006980802886, 12.796404886562023, 12.792998254799334, 12.789693379790958, 12.78614310645708, 12.782432055749023, 12.778958041957988, 12.775581151832421, 12.771979057591583, 12.768174520069824, 12.763909249563788, 12.760224956063363, 12.756458553792, 12.75307180385297, 12.749267950963217, 12.744462686567186, 12.741125925925912, 12.737667250437726, 12.734325744308189, 12.737982486865038, 12.73470877192978, 12.730545454545464, 12.727300699300766], \"time\": [599, 1199, 1799, 2399, 2999, 3599, 4199, 4799, 5399, 5999, 6599, 7199, 7799, 8399, 8999, 9599, 10199, 10799, 11399, 11999, 12599, 13199, 13799, 14399, 14999, 15599, 16199, 16799, 17399, 17999, 18599, 19199, 19799, 20398, 20999, 21599, 22199, 22799, 23399, 23999, 24599, 25199, 25799, 26399, 26999, 27598, 28199, 28799, 29399, 29999, 30599, 31199, 31799, 32399, 32999, 33599, 34199, 34799, 35399, 35999, 36599, 37199, 37799, 38399, 38999, 39599, 40199, 40799, 41399, 41999, 42599, 43199, 43799, 44399, 44999, 45599, 46199, 46799, 47399, 47999, 48599, 49199, 49799, 50398, 50999, 51599, 52199, 52799, 53399, 53998, 54599, 55199, 55799, 56399, 56999, 57599, 58199, 58799, 59399, 59999, 60599, 61199, 61799, 62399, 62999, 63599, 64199, 64799, 65399, 65999, 66598, 67198, 67799, 68399, 68999, 69599, 70199, 70799, 71399, 71999, 72599, 73199, 73798, 74399, 74999, 75599, 76199, 76799, 77399, 77999, 78599, 79199, 79799, 80399, 80999, 81599, 82199, 82799, 83399], \"v_min\": [12.72, 12.716000000000001, 12.712, 12.708, 12.704, 12.696, 12.696, 12.692, 12.688, 12.684000000000001, 12.68, 12.676, 12.672, 12.668000000000001, 12.664, 12.66, 12.656, 12.652000000000001, 12.648, 12.644, 12.644, 12.64, 12.636000000000001, 12.632, 12.628, 12.624, 12.620000000000001, 12.616, 12.612, 12.608, 12.604000000000001, 12.6, 12.6, 12.596, 12.592, 12.588000000000001, 12.584, 12.58, 12.58, 12.576, 12.568, 12.572000000000001, 12.58, 12.58, 12.576, 12.596, 12.604000000000001, 12.588000000000001, 12.632, 12.584, 12.588000000000001, 12.608, 12.66, 12.708, 12.668000000000001, 12.704, 12.524000000000001, 12.764000000000001, 12.928, 13.06, 13.072000000000001, 13.016, 13.544, 13.572000000000001, 13.120000000000001, 13.172, 13.096, 13.064, 13.352, 14.18, 14.152000000000001, 14.18, 14.188, 14.192, 14.196, 14.104000000000001, 14.152000000000001, 14.156, 14.128, 14.124, 14.120000000000001, 14.14, 14.128, 13.332, 13.044, 12.916, 14.1, 14.1, 14.112, 13.772, 13.172, 13.092, 13.024000000000001, 13.064, 13.092, 12.972, 12.888, 12.908, 12.908, 12.908, 12.872, 12.868, 12.864, 12.852, 12.852, 12.84, 12.84, 12.84, 12.836, 12.832, 12.828, 12.824, 12.82, 12.816, 12.812, 12.808, 12.808, 12.8, 12.8, 12.796000000000001, 12.792, 12.788, 12.784, 12.780000000000001, 12.780000000000001, 12.776, 12.772, 12.768, 12.764000000000001, 12.76, 12.756, 12.748000000000001, 12.744, 12.744, 12.74, 12.74, 12.736, 12.732000000000001, 12.728]}, \"sourceCount\": 10}";
//        String test_string = "{\"date\": \"2018_11_18\"}";
//        String test_string = "{\"date\": \"2018_11_18\", \"sourceName\": \"Batt 2\", \"sourceIndex\": 5, \"sourceData\": {\"mA_max\": [-43, -41, -42]}}";
        HistoricalData myHistoricalData = new HistoricalData(test_string);

        assertEquals("2018_11_18", myHistoricalData.m_date);
        assertEquals("Load", myHistoricalData.m_sourceName);
        assertEquals(0, myHistoricalData.m_sourceIndex);
        assertEquals(10, myHistoricalData.m_sourceCount);

        assertEquals(139, myHistoricalData.m_mA_max.length);
        assertEquals(318, myHistoricalData.m_mA_max[0]);
        assertEquals(740, myHistoricalData.m_mA_max[56]);

        assertEquals(139, myHistoricalData.m_mA_min.length);
        assertEquals(340, myHistoricalData.m_mA_min[0]);
        assertEquals(342, myHistoricalData.m_mA_min[138]);

        assertEquals(139, myHistoricalData.m_mA_avg.length);
        assertEquals(320, myHistoricalData.m_mA_avg[0]);
        assertEquals(320, myHistoricalData.m_mA_avg[138]);


    }
}